@page "/MineAnnoncer"
@using Core
@using MiniProjekt.Service
@inject IAnnonceService mService
@inject NavigationManager nav
@inject ILoginService mLogin
<h3>Mine Annoncer</h3>

@if (annoncer == null)
{
    <p><em>Loading...</em></p>
}
else if (annoncer.Length == 0)
{
    <p>Ingen annoncer fundet.</p>
    <button class="btn-primary" @onclick="NavigateToAddAnnoncePage">Tilføj Annonce</button>
}
else
{
    <div class="annonce-grid">
        @foreach (var annonce in annoncer)
        {
            <div class="annonce-card">
                <img class="annonceImg" src="@annonce.Picture" width="150px" height="150px"/>
                <div class="annonce-header">
                    <h3>@annonce.Title - @annonce.Category</h3>
                </div>
                <div class="annonce-price">@annonce.Price kr.</div>
                <div class="annonce-description">@annonce.Description</div>
                <div class="annonce-details">
                    <span class="status">Status: @annonce.Status</span>
                    <span class="location">Lokation: @annonce.Locations</span>
                </div>
                <div class="annonce-actions">
                    <button class="btn-primary" @onclick="() => EditAnnonce(annonce)">Rediger</button>
                    <button class="btn-primary" @onclick="() => DeleteById(annonce)">Slet</button>
                </div>
            </div>

        }
    </div>
    <div style="text-align: right; margin-bottom: 20px;">
        <button class="btn-primary" @onclick="NavigateToAddAnnoncePage">Tilføj Annonce</button>
    </div>

}

@code {

    private Annonce[]? annoncer;

    protected override async Task OnInitializedAsync()
    {
        User? currentUser = await mLogin.GetUserLoggedIn();
        if (currentUser == null)
            nav.NavigateTo("/LoginPage");
        await LoadAll();
    }

    private async Task LoadAll()
    {
        User? currentUser = await mLogin.GetUserLoggedIn();

        annoncer = await mService.GetAll();
        annoncer = annoncer.Where(a => a.SellerId == currentUser!.Id).ToArray();
    }

    private async Task DeleteById(Annonce annonce)
    {
        await mService.DeleteById(annonce.Id);
        await LoadAll();
    }

    private void NavigateToAddAnnoncePage()
    {
        nav.NavigateTo("/AddAnnoncePage");
    }

    private void EditAnnonce(Annonce annonce)
    {
        nav.NavigateTo($"/EditAnnoncePage/{annonce.Id}");
    }
    
}
