@page "/MineAnnoncer"
@using Core
@using MiniProjekt.Service
@inject IAnnonceService mService
@inject NavigationManager nav
@inject ILoginService mLogin
<h3>Mine Annoncer</h3>

@if (annoncer == null)
{
    <p><em>Loading...</em></p>
}
else if (annoncer.Length == 0)
{
    <p>Ingen annoncer fundet.</p>
    <button class="btn-primary" @onclick="NavigateToAddAnnoncePage">Tilføj Annonce</button>
}
else
{
    <table class="table">

        <tbody>
        @foreach (var annonce in annoncer)
        {
            <tr class="annonceRow">
                <td>
                    <h2>@annonce.Title - @annonce.Category</h2>
                    <p><strong>Pris:</strong> @annonce.Price kr.</p>
                </td>
                <td>
                    <p><strong>Beskrivelse:</strong> @annonce.Description</p>
                </td>
                <td>
                    <span class="status @(annonce.Status == "Aktiv" ? "green" : annonce.Status == "Solgt" ? "red" : "")">
                      @annonce.Status
                     </span>
                </td>
                <td>Lokation: @annonce.Locations</td>
                <td><img class="annonceImg" src="@annonce.Picture" width="150px" height="150px"/></td>
                @if (annonce.Status == "Aktiv")
                {
                    <td>
                        <button class="btn edit-btn" @onclick="() => EditAnnonce(annonce)">Rediger</button>
                    </td>
                    <td>
                        <button class="btn delete-btn" @onclick="() => DeleteById(annonce)">Slet</button>
                    </td>
                }
            </tr>
        }
        </tbody>
    </table>
    <button class="btn-primary" @onclick="NavigateToAddAnnoncePage">Tilføj Annonce</button>
}

@code {

    private Annonce[]? annoncer;

    protected override async Task OnInitializedAsync()
    {
        User? currentUser = await mLogin.GetUserLoggedIn();
        if (currentUser == null)
            nav.NavigateTo("/login");
        await LoadAll();
    }

    private async Task LoadAll()
    {
        User? currentUser = await mLogin.GetUserLoggedIn();

        annoncer = await mService.GetAll();
        annoncer = annoncer.Where(a => a.SellerId == currentUser!.Id).ToArray();
    }

    private async Task DeleteById(Annonce annonce)
    {
        await mService.DeleteById(annonce.Id);
        await LoadAll();
    }

    private void NavigateToAddAnnoncePage()
    {
        nav.NavigateTo("/AddAnnoncePage");
    }

    private void EditAnnonce(Annonce annonce)
    {
        nav.NavigateTo($"/EditAnnoncePage/{annonce.Id}");
    }
    
}
